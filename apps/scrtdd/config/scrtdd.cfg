# Send to the LOCATION group.
connection.primaryGroup = LOCATION

# Receive objects from LOCATION, MAGNITUDE and FOCMECH group.
connection.subscriptions = PICK, LOCATION, EVENT, SERVICE_REQUEST

# Relocate only preferred origins. When disabled scrtdd listens to LOCATION
# group and tries to relocate any origin. When enabled scrtdd listens to EVENT
# group and tries to relocate the preferred origin of an event.
onlyPreferredOrigins = true

# Allow relocation of automatic origins
automaticOrigins = true

# Allow relocation of manual origins.
manualOrigins = true

# Defines the directory used for storing processing files (waveforms cache and
# debugging files).
workingDirectory = @ROOTDIR@/var/lib/rtdd

# Store advanced processing information files in the working directory (useful
# for debugging/troubleshooting).
saveProcessingFiles = false

# Defines how long the real-time profile data should be kept in memory (in
# seconds). This is useful to release memory (e.g. catalog waveform data) after
# a period of inactivity. When a profile is then reloaded into memory because a
# new origin arrived, the background catalog is reloaded as well (useful in
# case the background catalog has changed since last time).
performance.profileTimeAlive = 3600

# Save catalog waveforms to local disk after they have been loaded the first
# time. This avoids re-reading them from the configured recordStream in the
# future since this operation is dramatically slow (unless the recordStream
# points to a local disk source, in which case there is no advantage over
# caching the waveforms). Note: It is safe to delete the cache folder, in which
# case the waveforms will be loaded and saved again on disk the next time the
# profile is loaded (they will be read again from the configured recordStream).
performance.cacheWaveforms = true

# Specifies a delay time in seconds, relative to origin time, to trigger the
# processing. This can be a single value or a list of delay times. The list
# case can be useful when a quick solution is wanted but more data (e.g.
# waveforms) becomes available at a later time. In this scenario multiple times
# are configured, so that an early solution is attempted and a more refined one
# is computed later. Example: "60, 120, 300, 3600"
cron.delayTimes = 10

# Enables/disables updating of a cron log file. This file will be created at
# ~/.seiscomp3/log/[appname].sched and contains information about the scheduled
# events and the processing queue.
cron.logging = true
